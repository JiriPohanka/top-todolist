/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n //create a new task\n\nfunction createTask(title, desc, dueDate, priority, parentProject) {\n  var newTask = {\n    title: title,\n    desc: desc,\n    dueDate: dueDate,\n    priority: priority,\n    parentProject: parentProject\n  };\n  newTask.isFinished = false;\n  taskManager.appendToProject(newTask, parentProject);\n  return newTask;\n} //create a new project\n\n\nfunction createProject(title, desc, priority) {\n  var newProject = {\n    title: title,\n    desc: desc,\n    priority: priority\n  };\n  newProject.taskArr = [];\n  projectManager.appendToProjects(newProject);\n  return newProject;\n} // module for all task-related methods\n\n\nvar taskManager = function () {\n  function appendToProject(task, project) {\n    project.taskArr.push(task);\n  }\n\n  function finishTask(task) {\n    task.isFinished = true;\n  }\n\n  return {\n    appendToProject: appendToProject,\n    finishTask: finishTask\n  };\n}(); // module for all project-related methods\n\n\nvar projectManager = function () {\n  var projects = [];\n\n  function appendToProjects(project) {\n    projects.push(project);\n  }\n\n  function getTasksInProject(project) {\n    return project.taskArr;\n  } // to get an arr of all tasks across all projects\n\n\n  function getAllTasks() {\n    var allTasksArr = [];\n\n    var _iterator = _createForOfIteratorHelper(projects),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var project = _step.value;\n        var tasksInProject = projectManager.getTasksInProject(project);\n\n        var _iterator2 = _createForOfIteratorHelper(tasksInProject),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var task = _step2.value;\n            allTasksArr.push(task);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return allTasksArr;\n  }\n\n  function getProjectList() {\n    return projects;\n  }\n\n  return {\n    getTasksInProject: getTasksInProject,\n    appendToProjects: appendToProjects,\n    getProjectList: getProjectList,\n    getAllTasks: getAllTasks\n  };\n}(); // module for DOM manipulation of new-item-forms\n\n\nvar formsUI = function () {\n  // using new-task / new-project forms with buttons on mainpage\n  var newTaskBtn = document.querySelector('.new-task-btn');\n  var newProjectBtn = document.querySelector('.new-project-btn');\n  var newTaskFormWrap = document.querySelector('.new-task-form-wrap');\n  var newProjectFormWrap = document.querySelector('.new-project-form-wrap');\n  newTaskBtn.addEventListener('click', function (e) {\n    newTaskFormWrap.classList.toggle('visible');\n    newTaskBtn.disabled = true;\n    newProjectFormWrap.classList.remove('visible');\n    newProjectBtn.disabled = false;\n    updateParentProjectList();\n  });\n  newProjectBtn.addEventListener('click', function (e) {\n    newProjectFormWrap.classList.toggle('visible');\n    newProjectBtn.disabled = true;\n    newTaskFormWrap.classList.remove('visible');\n    newTaskBtn.disabled = false;\n  }); // cancelling forms\n\n  var cancelNewTaskForm = document.querySelector('#cancel-new-task-form');\n  cancelNewTaskForm.addEventListener('click', function (e) {\n    newTaskForm.reset();\n    newTaskFormWrap.classList.toggle('visible');\n    newTaskBtn.disabled = false;\n  });\n  var cancelNewProjectForm = document.querySelector('#cancel-new-project-form');\n  cancelNewProjectForm.addEventListener('click', function (e) {\n    newProjectForm.reset();\n    newProjectFormWrap.classList.toggle('visible');\n    newProjectBtn.disabled = false;\n    return false;\n  }); // submitting forms\n\n  var newTaskForm = document.querySelector('.new-task-form');\n  var newProjectForm = document.querySelector('.new-project-form');\n  newTaskForm.addEventListener('submit', function (e) {\n    console.log(e);\n    e.preventDefault();\n    var newTaskTitle = e.target[0].value;\n    var newTaskDesc = e.target[1].value;\n    var newTaskDueDate = e.target[2].value;\n    var newTaskPriority = e.target[3].value;\n    var newTaskProject = projectManager.getProjectList()[e.target[4].options.selectedIndex];\n    createTask(newTaskTitle, newTaskDesc, newTaskDueDate, newTaskPriority, newTaskProject);\n    newTaskForm.reset();\n    newTaskFormWrap.classList.toggle('visible');\n    newTaskBtn.disabled = false;\n\n    if (projectMenuUI.getActiveProject()) {\n      taskAreaUI.showTasksOfActiveProject();\n    } else taskAreaUI.showAllTasks();\n  });\n  newProjectForm.addEventListener('submit', function (e) {\n    e.preventDefault();\n    var newProjectTitle = e.target[0].value;\n    var newProjectDesc = e.target[1].value;\n    var newProjectPriority = e.target[2].value;\n    createProject(newProjectTitle, newProjectDesc, newProjectPriority);\n    newProjectForm.reset();\n    newProjectFormWrap.classList.toggle('visible');\n    newProjectBtn.disabled = false;\n    projectMenuUI.updateProjectMenu();\n  });\n\n  function updateParentProjectList() {\n    var parentProjectSelect = document.querySelector('#task-parent-project');\n    parentProjectSelect.innerHTML = \"\"; //reset\n\n    var projectList = projectManager.getProjectList();\n\n    var _iterator3 = _createForOfIteratorHelper(projectList.entries()),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _step3$value = _slicedToArray(_step3.value, 2),\n            i = _step3$value[0],\n            project = _step3$value[1];\n\n        var option = document.createElement('option');\n        parentProjectSelect.appendChild(option);\n        option.textContent = project.title;\n        option.setAttribute('value', project.title);\n        option.setAttribute('data-project-id', i);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n}(); // Module for Project menu DOM manipulation\n\n\nvar projectMenuUI = function () {\n  // add logic for show-all-tasks button\n  var showAllTasksBtn = document.querySelector('.show-all-tasks');\n  showAllTasksBtn.addEventListener('click', function (e) {\n    console.log(taskAreaUI.showAllTasks);\n    taskAreaUI.showAllTasks();\n  });\n  var projectList = projectManager.getProjectList();\n  var projectNav = document.querySelector('.project-nav ul'); // update the list of current projects\n\n  function updateProjectMenu() {\n    projectNav.innerHTML = \"\";\n\n    var _iterator4 = _createForOfIteratorHelper(projectList.entries()),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _step4$value = _slicedToArray(_step4.value, 2),\n            i = _step4$value[0],\n            project = _step4$value[1];\n\n        var projectItem = document.createElement('li');\n        projectItem.setAttribute('data-project-id', i);\n        projectItem.classList.add('project-item');\n        projectNav.appendChild(projectItem);\n        projectItem.textContent = \"\".concat(project.title);\n      } // add active-project class to clicked project\n\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    var projectItems = document.querySelectorAll('.project-item');\n\n    var _iterator5 = _createForOfIteratorHelper(projectItems),\n        _step5;\n\n    try {\n      var _loop = function _loop() {\n        var projectItem = _step5.value;\n        projectItem.addEventListener('click', function (e) {\n          // first remove all active\n          var _iterator6 = _createForOfIteratorHelper(projectItems),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var _projectItem = _step6.value;\n\n              _projectItem.classList.remove('active-project');\n            } // then add active on the clicked item\n\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          projectItem.classList.toggle('active-project');\n          taskAreaUI.showTasksOfActiveProject();\n        });\n      };\n\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n  }\n\n  function getActiveProject() {\n    var activeProject = document.querySelector('li.active-project');\n    return activeProject;\n  }\n\n  return {\n    updateProjectMenu: updateProjectMenu,\n    getActiveProject: getActiveProject\n  };\n}(); //module for populating tasks area based on active project\n\n\nvar taskAreaUI = function () {\n  var activeTasksTable = document.querySelector('.active-tasks-table');\n\n  function showAllTasks() {\n    var allTasks = projectManager.getAllTasks();\n    activeTasksTable.innerHTML = \"\"; // reset contents of task table\n\n    if (projectMenuUI.getActiveProject()) {\n      projectMenuUI.getActiveProject().classList.remove('active-project');\n    } // create table headings\n\n\n    var headingRow = document.createElement('tr');\n    activeTasksTable.appendChild(headingRow);\n    var colTitle = document.createElement('th');\n    headingRow.appendChild(colTitle);\n    colTitle.textContent = \"Task\";\n    var colDesc = document.createElement('th');\n    headingRow.appendChild(colDesc);\n    colDesc.textContent = \"Description\";\n    var colDueDate = document.createElement('th');\n    headingRow.appendChild(colDueDate);\n    colDueDate.textContent = \"Deadline\";\n    var colPriority = document.createElement('th');\n    headingRow.appendChild(colPriority);\n    colPriority.textContent = \"Priority\";\n    var colProject = document.createElement('th');\n    headingRow.appendChild(colProject);\n    colProject.textContent = \"Project\";\n\n    var _iterator7 = _createForOfIteratorHelper(allTasks),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var item = _step7.value;\n        //create elements with all the information\n        var row = document.createElement('tr');\n        activeTasksTable.appendChild(row);\n        var colTitleValue = document.createElement('td');\n        row.appendChild(colTitleValue);\n        colTitleValue.textContent = item.title;\n        var colDescValue = document.createElement('td');\n        row.appendChild(colDescValue);\n        colDescValue.textContent = item.desc;\n        var colDueDateValue = document.createElement('td');\n        row.appendChild(colDueDateValue);\n        colDueDateValue.textContent = item.dueDate;\n        var colPriorityValue = document.createElement('td');\n        row.appendChild(colPriorityValue);\n        colPriorityValue.textContent = item.priority;\n        var colProjectValue = document.createElement('td');\n        row.appendChild(colProjectValue);\n        colProjectValue.textContent = item.parentProject.title;\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n  }\n\n  function showTasksOfActiveProject() {\n    var activeProjectID = projectMenuUI.getActiveProject().dataset.projectId;\n    var activeProject = projectManager.getProjectList()[activeProjectID];\n    var tasksInProject = projectManager.getTasksInProject(activeProject);\n    activeTasksTable.innerHTML = \"\"; // create table headings\n\n    var headingRow = document.createElement('tr');\n    activeTasksTable.appendChild(headingRow);\n    var colTitle = document.createElement('th');\n    headingRow.appendChild(colTitle);\n    colTitle.textContent = \"Task\";\n    var colDesc = document.createElement('th');\n    headingRow.appendChild(colDesc);\n    colDesc.textContent = \"Description\";\n    var colDueDate = document.createElement('th');\n    headingRow.appendChild(colDueDate);\n    colDueDate.textContent = \"Deadline\";\n    var colPriority = document.createElement('th');\n    headingRow.appendChild(colPriority);\n    colPriority.textContent = \"Priority\";\n    var colProject = document.createElement('th');\n    headingRow.appendChild(colProject);\n    colProject.textContent = \"Project\";\n\n    var _iterator8 = _createForOfIteratorHelper(tasksInProject),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var task = _step8.value;\n        //create elements with all the information\n        var row = document.createElement('tr');\n        activeTasksTable.appendChild(row);\n        var colTitleValue = document.createElement('td');\n        row.appendChild(colTitleValue);\n        colTitleValue.textContent = task.title;\n        var colDescValue = document.createElement('td');\n        row.appendChild(colDescValue);\n        colDescValue.textContent = task.desc;\n        var colDueDateValue = document.createElement('td');\n        row.appendChild(colDueDateValue);\n        colDueDateValue.textContent = task.dueDate;\n        var colPriorityValue = document.createElement('td');\n        row.appendChild(colPriorityValue);\n        colPriorityValue.textContent = task.priority;\n        var colProjectValue = document.createElement('td');\n        row.appendChild(colProjectValue);\n        colProjectValue.textContent = task.parentProject.title;\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n  }\n\n  return {\n    showTasksOfActiveProject: showTasksOfActiveProject,\n    showAllTasks: showAllTasks\n  };\n}(); //for testing purposes\n\n\nvar project1 = createProject('TOP programming', 'learn to be a front-end developer', 'high');\nvar project2 = createProject('Spring cleaning', 'dont live like a pig', 'low');\nvar project3 = createProject('Portfolio', 'get ready for interviews', 'high');\nvar project4 = createProject('Workout', 'get your shit together :)', 'medium');\nvar task1 = createTask('Project: TODO List', 'final assignment of the Javascript basics course', 'tomorrow', 'high', project1);\nvar task2 = createTask('Do it!', 'Just do it!', 'tomorrow', 'high', project1);\nvar task3 = createTask('Do it!', 'Just do it!', 'tomorrow', 'high', project1);\nvar task4 = createTask('Do it!', 'Just do it!', 'tomorrow', 'high', project1);\nvar task5 = createTask('Project: TODO List', 'final assignment of the Javascript basics course', 'tomorrow', 'high', project1);\nvar task6 = createTask('Do it!', 'Just do it!', 'tomorrow', 'high', project2);\nvar task7 = createTask('Do it!', 'Just do it!', 'tomorrow', 'high', project2);\nvar task8 = createTask('Do it!', 'Just do it!', 'tomorrow', 'high', project3);\nvar task9 = createTask('Do it!', 'Just do it!', 'tomorrow', 'high', project3);\nvar task10 = createTask('Do it!', 'Just do it!', 'tomorrow', 'high', project3);\nvar task11 = createTask('Do it!', 'Just do it!', 'tomorrow', 'high', project4);\nvar task12 = createTask('Do it!', 'Just do it!', 'tomorrow', 'high', project4);\nvar task13 = createTask('Do it!', 'Just do it!', 'tomorrow', 'high', project4);\nprojectMenuUI.updateProjectMenu();\ntaskAreaUI.showAllTasks();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;